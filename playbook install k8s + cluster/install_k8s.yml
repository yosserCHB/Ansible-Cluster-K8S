---
- name: Installer et configurer Kubernetes
  hosts: master
  become: yes
  tasks:

    - name: Désactiver le swap
      command: swapoff -a

    - name: Commenter le swap dans fstab
      replace:
        path: /etc/fstab
        regexp: '^([^#].*swap.*)$'
        replace: '#\1'

    - name: Charger les modules nécessaires
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter

    - name: Appliquer les modules
      shell: |
        modprobe overlay
        modprobe br_netfilter

    - name: Configurer les paramètres sysctl pour Kubernetes
      copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1

    - name: Appliquer la configuration sysctl
      command: sysctl --system

    - name: Ajouter le repo Kubernetes
      shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

    - name: Installer kubelet, kubeadm, kubectl
      apt:
        name:
          - kubelet=1.29.3-1.1
          - kubeadm=1.29.3-1.1
          - kubectl=1.29.3-1.1
        state: present
        update_cache: yes

    - name: Activer le service kubelet
      systemd:
        name: kubelet
        enabled: yes
        state: started

    - name: Initialiser le cluster Kubernetes avec kubeadm
      shell: kubeadm init --pod-network-cidr=10.244.0.0/16
      register: kubeadm_init_output
      ignore_errors: yes

    - name: Vérifier le statut de containerd (en cas d'erreur avec kubeadm init)
      shell: sudo systemctl status containerd
      when: kubeadm_init_output.rc != 0
      register: containerd_status

    - name: Configurer containerd si nécessaire
      block:
        - name: Créer le dossier de configuration de containerd
          file:
            path: /etc/containerd
            state: directory

        - name: Générer la configuration par défaut de containerd
          shell: containerd config default | sudo tee /etc/containerd/config.toml > /dev/null

        - name: Éditer la configuration de containerd
          lineinfile:
            path: /etc/containerd/config.toml
            regexp: '^#SystemdCgroup = false'
            line: 'SystemdCgroup = true'

        - name: Redémarrer containerd
          systemd:
            name: containerd
            state: restarted
            enabled: yes

        - name: Relancer l'initialisation du cluster Kubernetes
          shell: sudo kubeadm init --pod-network-cidr=10.244.0.0/16
      when: kubeadm_init_output.rc != 0

    - name: Configurer kubectl pour l'utilisateur courant
      shell: |
        mkdir -p $HOME/.kube
        sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        sudo chown $(id -u):$(id -g) $HOME/.kube/config

    - name: Installer le réseau Flannel (CNI)
      shell: kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml

    - name: Vérifier que le nœud maître est prêt
      shell: kubectl get nodes
      register: get_nodes_output

    - name: Vérifier les pods du système
      shell: kubectl get pods -n kube-system
      register: get_pods_output

    - name: Afficher les nœuds Kubernetes
      debug:
        msg: "{{ get_nodes_output.stdout }}"

    - name: Afficher les pods Kubernetes
      debug:
        msg: "{{ get_pods_output.stdout }}"
